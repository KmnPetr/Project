server.port=8080

spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://progect_database:5432/postgres
#spring.datasource.url=jdbc:postgresql://46.8.19.22:5432/postgres
spring.datasource.username=
spring.datasource.password=

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#this is necessary so that database requests are visible in the console
spring.jpa.properties.hibernate.show_sql=true

spring.mvc.hiddenmethod.filter.enabled=true

#TODO
jwt_secret=


#configuring the kafka
#spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.bootstrap-servers=kafka:9092
spring.kafka.consumer.group-id=group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#The value `*` specified for this property means that all class packages are considered trusted and can be deserialized when receiving JSON messages.
spring.kafka.consumer.properties.spring.json.trusted.packages=*

#spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.bootstrap-servers=kafka:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
